--- a/net/mac80211/rc80211_minstrel_ht_api.c
+++ b/net/mac80211/rc80211_minstrel_ht_api.c
@@ -557,6 +557,43 @@ out:
 	return err;
 }
 
+static int
+minstrel_ht_execute_and_echo(struct minstrel_priv *mp, char *cmd, char *args)
+{
+	char buf[96];
+	int err = 0, len;
+
+	len = scnprintf(buf, sizeof(buf), "%llx;%s",
+			(unsigned long long)ktime_get_real_fast_ns(), cmd);
+	if (args)
+		len += scnprintf(buf + len, sizeof(buf) - len, ";%s\n", args);
+	else
+		len += scnprintf(buf + len, sizeof(buf) - len, "\n");
+
+	if (!strcmp(cmd, "start"))
+		minstrel_ht_api_start(mp, args);
+	else if (!strcmp(cmd, "stop"))
+		minstrel_ht_api_stop(mp);
+	else if (!strcmp(cmd, "manual"))
+		minstrel_ht_api_set_manual(mp, true);
+	else if (!strcmp(cmd, "auto"))
+		minstrel_ht_api_set_manual(mp, false);
+	else if (!strcmp(cmd, "reset_stats"))
+		err = minstrel_ht_reset_stats(mp, args);
+	else
+		err = -EINVAL;
+
+	if (err)
+		return err;
+
+	spin_lock_bh(&mp->relay_lock);
+	relay_write(mp->relay_ev, buf, len);
+	relay_flush(mp->relay_ev);
+	spin_unlock_bh(&mp->relay_lock);
+
+	return 0;
+}
+
 static ssize_t
 minstrel_ht_control_write(struct file *file, const char __user *userbuf,
 			  size_t count, loff_t *ppos)
@@ -586,22 +623,12 @@ minstrel_ht_control_write(struct file *f
 	err = 0;
 	if (!strcmp(cur, "dump"))
 		minstrel_ht_dump_stations(mp, "dump");
-	else if (!strcmp(cur, "start"))
-		minstrel_ht_api_start(mp, pos);
-	else if (!strcmp(cur, "stop"))
-		minstrel_ht_api_stop(mp);
-	else if (!strcmp(cur, "manual"))
-		minstrel_ht_api_set_manual(mp, true);
-	else if (!strcmp(cur, "auto"))
-		minstrel_ht_api_set_manual(mp, false);
-	else if (!strcmp(cur, "reset_stats"))
-		err = minstrel_ht_reset_stats(mp, pos);
 	else if (!strcmp(cur, "set_rates") || !strcmp(cur, "rates"))
 		err = minstrel_ht_api_sta_cmd(mp, STA_CMD_RC, pos);
 	else if (!strcmp(cur, "probe"))
 		err = minstrel_ht_api_sta_cmd(mp, STA_CMD_PROBE, pos);
 	else
-		err = -EINVAL;
+		err = minstrel_ht_execute_and_echo(mp, cur, pos);
 
 	if (err)
 		return err;
