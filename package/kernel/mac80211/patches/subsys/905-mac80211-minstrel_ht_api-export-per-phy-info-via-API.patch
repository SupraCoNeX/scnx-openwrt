--- a/net/mac80211/rc80211_minstrel_ht_api.c
+++ b/net/mac80211/rc80211_minstrel_ht_api.c
@@ -8,6 +8,8 @@
 #include <linux/debugfs.h>
 #include <linux/relay.h>
 #include <net/mac80211.h>
+#include "ieee80211_i.h"
+#include "rate.h"
 #include "rc80211_minstrel_ht.h"
 
 #define ORCA_VERSION "1"
@@ -129,6 +131,33 @@ minstrel_ht_read_api_info(struct seq_fil
 	return 0;
 }
 
+static int
+minstrel_ht_read_phy_info(struct seq_file *s, void *data)
+{
+	struct wiphy *wiphy = container_of(s->private, struct wiphy, dev);
+	struct ieee80211_local *local = wiphy_priv(wiphy);
+	struct ieee80211_sub_if_data *sdata;
+	struct minstrel_priv *mp = local->rate_ctrl->priv;
+	int i = 0;
+
+	seq_printf(s, "drv;%s\n", wiphy_dev(wiphy)->driver->name);
+
+	mutex_lock(&local->iflist_mtx);
+	list_for_each_entry(sdata, &local->interfaces, list) {
+		if (!i) {
+			seq_printf(s, "if;%s", sdata->name);
+			i++;
+        	} else {
+			seq_printf(s, ",%s", sdata->name);
+		}
+	}
+	mutex_unlock(&local->iflist_mtx);
+
+	seq_printf(s, "\nrc_mode;%s\n", mp->manual ? "manual" : "auto");
+
+	return 0;
+}
+
 static struct dentry *
 create_buf_file_cb(const char *filename, struct dentry *parent, umode_t mode,
 		   struct rchan_buf *buf, int *is_global)
@@ -750,6 +779,8 @@ void minstrel_ht_add_debugfs_api(struct
 				  NULL);
 	debugfs_create_devm_seqfile(&hw->wiphy->dev, "api_info",
 				    dir, minstrel_ht_read_api_info);
+	debugfs_create_devm_seqfile(&hw->wiphy->dev, "api_phy",
+				    dir, minstrel_ht_read_phy_info);
 	debugfs_create_file("api_control", 0200, dir, mp, &fops_control);
 }
 
