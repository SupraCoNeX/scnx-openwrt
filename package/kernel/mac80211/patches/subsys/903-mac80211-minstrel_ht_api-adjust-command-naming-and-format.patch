--- a/net/mac80211/rc80211_minstrel_ht_api.c
+++ b/net/mac80211/rc80211_minstrel_ht_api.c
@@ -12,7 +12,7 @@ extern u8 sample_table[SAMPLE_COLUMNS][M
 
 enum sta_cmd {
 	STA_CMD_PROBE,
-	STA_CMD_RATES,
+	STA_CMD_RC,
 };
 
 static void
@@ -77,7 +77,12 @@ minstrel_ht_read_api_info(struct seq_fil
 	seq_printf(s, "\n");
 
 	seq_printf(s, "#reset_stats;macaddr\n");
-	seq_printf(s, "#rates;macaddr;rates;counts\n");
+
+	seq_printf(s, "#set_rates;macaddr");
+	for (i = 0; i < IEEE80211_TX_MAX_RATES; i++)
+		seq_printf(s, ";rate%d,count%d", i, i);
+	seq_printf(s, "\n");
+
 	seq_printf(s, "#probe;macaddr;rate\n");
 
 	seq_printf(s, "#sample_table;cols;rows");
@@ -360,19 +365,16 @@ minstrel_ht_set_probe_rate(struct minstr
 
 static int
 minstrel_ht_set_rates(struct minstrel_priv *mp, struct minstrel_ht_sta *mi,
-		      char *rate_str, char *count_str)
+		      char **stages, unsigned int n_stages)
 {
 	struct ieee80211_sta_rates *ratetbl;
+	char *parts[2];
 	unsigned int count;
-	char *countlist[4];
-	char *ratelist[4];
-	int rate;
-	int n_rates;
-	int n_count;
+	int n_parts, rate;
 	int err = -EINVAL;
 	int i;
 
-	if (!rate_str || !count_str)
+	if (!stages || !stages[0] || !n_stages)
 		return -EINVAL;
 
 	if (!mi->ratetbl)
@@ -383,16 +385,17 @@ minstrel_ht_set_rates(struct minstrel_pr
 		return -ENOMEM;
 
 	memset(ratetbl, 0, sizeof(*ratetbl));
-	n_rates = minstrel_ht_get_args(ratelist, ARRAY_SIZE(ratelist),
-				       rate_str, ",");
-	n_count = minstrel_ht_get_args(countlist, ARRAY_SIZE(countlist),
-				       count_str, ",");
-	for (i = 0; i < min(n_rates, n_count); i++) {
-		rate = minstrel_ht_rate_from_str(mi, ratelist[i]);
+	for (i = 0; i < n_stages; i++) {
+		n_parts = minstrel_ht_get_args(parts, ARRAY_SIZE(parts),
+					       stages[i], ",");
+		if (n_parts < 2)
+			goto error;
+
+		rate = minstrel_ht_rate_from_str(mi, parts[0]);
 		if (rate < 0)
 			goto error;
 
-		if (kstrtouint(countlist[i], 16, &count))
+		if (kstrtouint(parts[1], 16, &count))
 			goto error;
 
 		minstrel_ht_set_rate(mp, mi, ratetbl, i, rate);
@@ -448,8 +451,8 @@ minstrel_ht_api_sta_cmd(struct minstrel_
 	case STA_CMD_PROBE:
 		ret = minstrel_ht_set_probe_rate(mi, args[1]);
 		break;
-	case STA_CMD_RATES:
-		ret = minstrel_ht_set_rates(mp, mi, args[1], args[2]);
+	case STA_CMD_RC:
+		ret = minstrel_ht_set_rates(mp, mi, &args[1], n_args - 1);
 		break;
 	}
 
@@ -563,8 +566,8 @@ minstrel_ht_control_write(struct file *f
 		minstrel_ht_api_set_manual(mp, false);
 	else if (!strcmp(cur, "reset_stats"))
 		err = minstrel_ht_reset_stats(mp, pos);
-	else if (!strcmp(cur, "rates"))
-		err = minstrel_ht_api_sta_cmd(mp, STA_CMD_RATES, pos);
+	else if (!strcmp(cur, "set_rates") || !strcmp(cur, "rates"))
+		err = minstrel_ht_api_sta_cmd(mp, STA_CMD_RC, pos);
 	else if (!strcmp(cur, "probe"))
 		err = minstrel_ht_api_sta_cmd(mp, STA_CMD_PROBE, pos);
 	else
