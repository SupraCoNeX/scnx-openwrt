--- a/net/mac80211/rc80211_minstrel_ht_api.c
+++ b/net/mac80211/rc80211_minstrel_ht_api.c
@@ -37,7 +37,10 @@ minstrel_ht_read_api_info(struct seq_fil
 
 	seq_printf(s, "#group;index;offset;type;nss;bw;gi;airtime\n");
 	seq_printf(s, "#sta;action;macaddr;overhead_mcs;overhead_legacy;supported\n");
-	seq_printf(s, "#txs;macaddr;num_frames;num_acked;probe;rates;counts\n");
+	seq_printf(s, "#txs;macaddr;num_frames;num_acked;probe");
+	for (i = 0; i < IEEE80211_TX_MAX_RATES; i++)
+		seq_printf(s, ";rate%d,count%d", i, i);
+	seq_printf(s, "\n");
 	seq_printf(s, "#stats;macaddr;rate;avg_prob;avg_tp;cur_success;cur_attempts;hist_success;hist_attempts\n");
 	seq_printf(s, "#rates;macaddr;rates;counts\n");
 	seq_printf(s, "#probe;macaddr;rate\n");
@@ -470,24 +473,21 @@ void __minstrel_ht_report_tx_status(stru
 	if (!n_rates)
 		return;
 
-	ofs += scnprintf(txs, sizeof(txs), "%llx;txs;%pM;%x;%x;%x;",
+	ofs += scnprintf(txs, sizeof(txs), "%llx;txs;%pM;%x;%x;%x",
 			 (unsigned long long)ktime_get_boottime_ns(),
 			 mi->sta->addr,
 			 info->status.ampdu_len,
 			 info->status.ampdu_ack_len,
 			 !!(info->flags & IEEE80211_TX_CTL_RATE_CTRL_PROBE));
 
-	ofs += scnprintf(txs + ofs, sizeof(txs) - ofs, "%x",
-			 rate_list[0]);
-	for (i = 1; i < n_rates; i++)
-		ofs += scnprintf(txs + ofs, sizeof(txs) - ofs, ",%x",
-				 rate_list[i]);
-
-	ofs += scnprintf(txs + ofs, sizeof(txs) - ofs, ";%x",
-			 info->status.rates[0].count);
-	for (i = 1; i < n_rates; i++)
-		ofs += scnprintf(txs + ofs, sizeof(txs) - ofs, ",%x",
+	for (i = 0; i < n_rates; i++)
+		ofs += scnprintf(txs + ofs, sizeof(txs) - ofs, ";%x,%x",
+				 rate_list[i],
 				 info->status.rates[i].count);
+
+	for (; i < IEEE80211_TX_MAX_RATES; i++)
+		ofs += scnprintf(txs + ofs, sizeof(txs) - ofs, ";ffff,0");
+
 	ofs += scnprintf(txs + ofs, sizeof(txs) - ofs, "\n");
 	relay_write(mp->relay_ev, txs, ofs);
 	relay_flush(mp->relay_ev);
--- a/net/mac80211/rc80211_minstrel_ht.c
+++ b/net/mac80211/rc80211_minstrel_ht.c
@@ -1219,6 +1219,7 @@ minstrel_ht_tx_status(void *priv, struct
 		       !minstrel_ht_txstat_valid(mp, mi, &ar[i + 1]);
 
 		rate = minstrel_ht_get_stats(mp, mi, &ar[i], &rate_list[i]);
+
 		if (last)
 			rate->success += info->status.ampdu_ack_len;
 
