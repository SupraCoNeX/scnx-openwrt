--- a/net/mac80211/rc80211_minstrel_ht_api.c
+++ b/net/mac80211/rc80211_minstrel_ht_api.c
@@ -37,7 +37,10 @@ minstrel_ht_read_api_info(struct seq_fil
 
 	seq_printf(s, "#group;index;offset;type;nss;bw;gi;airtime\n");
 	seq_printf(s, "#sta;action;macaddr;overhead_mcs;overhead_legacy;supported\n");
-	seq_printf(s, "#txs;macaddr;num_frames;num_acked;probe;rates;counts\n");
+	seq_printf(s, "#txs;macaddr;num_frames;num_acked;probe");
+	for (i = 0; i < IEEE80211_TX_MAX_RATES; i++)
+		seq_printf(s, ";rate%d,count%d", i, i);
+	seq_printf(s, "\n");
 	seq_printf(s, "#stats;macaddr;rate;avg_prob;avg_tp;cur_success;cur_attempts;hist_success;hist_attempts\n");
 	seq_printf(s, "#rates;macaddr;rates;counts\n");
 	seq_printf(s, "#probe;macaddr;rate\n");
@@ -460,34 +463,24 @@ out:
 void __minstrel_ht_report_tx_status(struct minstrel_priv *mp,
 				    struct minstrel_ht_sta *mi,
 				    struct ieee80211_tx_info *info,
-				    u16 *rate_list,
-				    int n_rates)
+				    u16 *rate_list)
 {
 	char txs[64 + IEEE80211_TX_MAX_RATES * 8];
 	int ofs = 0;
 	int i;
 
-	if (!n_rates)
-		return;
-
-	ofs += scnprintf(txs, sizeof(txs), "%llx;txs;%pM;%x;%x;%x;",
+	ofs += scnprintf(txs, sizeof(txs), "%llx;txs;%pM;%x;%x;%x",
 			 (unsigned long long)ktime_get_boottime_ns(),
 			 mi->sta->addr,
 			 info->status.ampdu_len,
 			 info->status.ampdu_ack_len,
 			 !!(info->flags & IEEE80211_TX_CTL_RATE_CTRL_PROBE));
 
-	ofs += scnprintf(txs + ofs, sizeof(txs) - ofs, "%x",
-			 rate_list[0]);
-	for (i = 1; i < n_rates; i++)
-		ofs += scnprintf(txs + ofs, sizeof(txs) - ofs, ",%x",
-				 rate_list[i]);
-
-	ofs += scnprintf(txs + ofs, sizeof(txs) - ofs, ";%x",
-			 info->status.rates[0].count);
-	for (i = 1; i < n_rates; i++)
-		ofs += scnprintf(txs + ofs, sizeof(txs) - ofs, ",%x",
-				 info->status.rates[i].count);
+	for (i = 0; i < IEEE80211_TX_MAX_RATES; i++)
+		ofs += scnprintf(txs + ofs, sizeof(txs) - ofs, ";%x,%x",
+						 rate_list[i],
+						 rate_list[i] ? info->status.rates[i].count : 0);
+
 	ofs += scnprintf(txs + ofs, sizeof(txs) - ofs, "\n");
 	relay_write(mp->relay_ev, txs, ofs);
 	relay_flush(mp->relay_ev);
--- a/net/mac80211/rc80211_minstrel_ht.c
+++ b/net/mac80211/rc80211_minstrel_ht.c
@@ -1187,7 +1187,7 @@ minstrel_ht_tx_status(void *priv, struct
 	u32 update_interval = mp->update_interval;
 	bool last, update = false;
 	u16 rate_list[IEEE80211_TX_MAX_RATES] = {};
-	int i;
+	int i, j;
 
 	/* This packet was aggregated but doesn't carry status info */
 	if ((info->flags & IEEE80211_TX_CTL_AMPDU) &&
@@ -1219,13 +1219,16 @@ minstrel_ht_tx_status(void *priv, struct
 		       !minstrel_ht_txstat_valid(mp, mi, &ar[i + 1]);
 
 		rate = minstrel_ht_get_stats(mp, mi, &ar[i], &rate_list[i]);
-		if (last)
-			rate->success += info->status.ampdu_ack_len;
-
 		rate->attempts += ar[i].count * info->status.ampdu_len;
+
+		if (last) {
+			rate->success += info->status.ampdu_ack_len;
+			for (j = i + 1; j < IEEE80211_TX_MAX_RATES; j++)
+				rate_list[j] = 0;
+		}
 	}
 
-	minstrel_ht_report_tx_status(mp, mi, info, rate_list, i);
+	minstrel_ht_report_tx_status(mp, mi, info, rate_list);
 
 	if (mp->hw->max_rates > 1) {
 		/*
--- a/net/mac80211/rc80211_minstrel_ht.h
+++ b/net/mac80211/rc80211_minstrel_ht.h
@@ -218,7 +218,7 @@ void minstrel_ht_sta_remove(struct minst
 void __minstrel_ht_report_tx_status(struct minstrel_priv *mp,
 				    struct minstrel_ht_sta *mi,
 				    struct ieee80211_tx_info *info,
-				    u16 *rate_list, int n_rates);
+				    u16 *rate_list);
 void __minstrel_ht_report_rate_update(struct minstrel_priv *mp,
 				      struct minstrel_ht_sta *mi, u16 rate,
 				      struct minstrel_rate_stats *mrs);
@@ -249,13 +249,13 @@ static inline void
 minstrel_ht_report_tx_status(struct minstrel_priv *mp,
 			     struct minstrel_ht_sta *mi,
 			     struct ieee80211_tx_info *info,
-			     u16 *rate_list, int n_rates)
+			     u16 *rate_list)
 {
 #ifdef CPTCFG_MAC80211_RC_MINSTREL_DEBUGFS_API
 	if (!(mp->monitor & MINSTREL_MONITOR_TXS))
 		return;
 
-	__minstrel_ht_report_tx_status(mp, mi, info, rate_list, n_rates);
+	__minstrel_ht_report_tx_status(mp, mi, info, rate_list);
 #endif
 }
 
