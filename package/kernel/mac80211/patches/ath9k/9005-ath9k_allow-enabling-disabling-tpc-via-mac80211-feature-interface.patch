--- a/drivers/net/wireless/ath/ath9k/main.c
+++ b/drivers/net/wireless/ath/ath9k/main.c
@@ -2803,6 +2803,8 @@ ath9k_get_feature_state(struct ieee80211
 	switch (feature) {
 	case IEEE80211_FTRCTRL_ADAPTIVE_SENSITIVITY:
 		return !(sc->sc_ah->common.disable_ani);
+	case IEEE80211_FTRCTRL_TPC:
+		return sc->sc_ah->tpc_enabled;
 	default:
 		return -1;
 	}
@@ -2819,6 +2821,15 @@ ath9k_set_feature_state(struct ieee80211
 	case IEEE80211_FTRCTRL_ADAPTIVE_SENSITIVITY:
 		ath9k_set_ani(sc, enable);
 		break;
+	case IEEE80211_FTRCTRL_TPC:
+		if (enable != sc->sc_ah->tpc_enabled) {
+			sc->sc_ah->tpc_enabled = enable;
+
+			mutex_lock(&sc->mutex);
+			ath9k_set_txpower(sc, NULL);
+			mutex_unlock(&sc->mutex);
+		}
+		break;
 	default:
 		return -1;
 	}
--- a/drivers/net/wireless/ath/ath9k/init.c
+++ b/drivers/net/wireless/ath/ath9k/init.c
@@ -1035,6 +1035,7 @@ static void ath9k_set_hw_capab(struct at
 	hw->extra_tx_headroom = 4;
 
 	hw->feature_ctrl = IEEE80211_FTRCTRL_ADAPTIVE_SENSITIVITY;
+	hw->feature_ctrl |= IEEE80211_FTRCTRL_TPC;
 
 	hw->wiphy->available_antennas_rx = BIT(ah->caps.max_rxchains) - 1;
 	hw->wiphy->available_antennas_tx = BIT(ah->caps.max_txchains) - 1;
