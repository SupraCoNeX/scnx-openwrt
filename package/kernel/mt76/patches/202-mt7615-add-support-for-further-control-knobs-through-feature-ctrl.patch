--- a/mt7615/init.c
+++ b/mt7615/init.c
@@ -417,6 +417,7 @@ mt7615_init_wiphy(struct ieee80211_hw *h
 			IEEE80211_VHT_CAP_MAX_A_MPDU_LENGTH_EXPONENT_MASK;
 
 	ieee80211_feature_ctrl_set(hw, IEEE80211_FTRCTRL_ADAPTIVE_SENSITIVITY);
+	ieee80211_feature_ctrl_set(hw, IEEE80211_FTRCTRL_USER_POWER);
 }
 
 static void
--- a/mt7615/main.c
+++ b/mt7615/main.c
@@ -1347,6 +1347,8 @@ static u32 mt7615_get_feature_state(stru
 	switch (feature) {
 	case IEEE80211_FTRCTRL_ADAPTIVE_SENSITIVITY:
 		return (u32)dev->phy.scs_en;
+	case IEEE80211_FTRCTRL_USER_POWER:
+		return (hw->conf.power_level > 0) ? hw->conf.power_level : 0;
 	default:
 		return U32_MAX;
 	}
@@ -1362,6 +1364,15 @@ static int mt7615_set_feature_state(stru
 	switch (feature) {
 	case IEEE80211_FTRCTRL_ADAPTIVE_SENSITIVITY:
 		return mt7615_set_scs(dev, enable);
+	case IEEE80211_FTRCTRL_USER_POWER:
+		if (state > 60) /* anything above doesn't really make sense */
+			return 1;
+
+		hw->conf.power_level = state;
+		if (mt7615_config(hw, IEEE80211_CONF_CHANGE_POWER))
+			return 1;
+		else
+			return 0;
 	default:
 		return -1;
 	}
