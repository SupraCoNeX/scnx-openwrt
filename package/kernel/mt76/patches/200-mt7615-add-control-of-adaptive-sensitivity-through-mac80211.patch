--- a/mt7615/main.c
+++ b/mt7615/main.c
@@ -1296,6 +1296,25 @@ static void mt7615_set_rekey_data(struct
 }
 #endif /* CONFIG_PM */
 
+static bool mt7615_get_scs(struct ieee80211_hw *hw) {
+	struct mt7615_dev *dev = mt7615_hw_dev(hw);
+
+	return dev->phy.scs_en;
+}
+
+static void mt7615_set_scs(struct ieee80211_hw *hw, bool enable) {
+	struct mt7615_dev *dev = mt7615_hw_dev(hw);
+	struct mt7615_phy *ext_phy;
+
+	if (!mt7615_wait_for_mcu_init(dev))
+        	return;
+
+	mt7615_mac_set_scs(&dev->phy, enable);
+	ext_phy = mt7615_ext_phy(dev);
+	if (ext_phy)
+        	mt7615_mac_set_scs(ext_phy, enable);
+}
+
 const struct ieee80211_ops mt7615_ops = {
 	.tx = mt7615_tx,
 	.start = mt7615_start,
@@ -1343,6 +1362,8 @@ const struct ieee80211_ops mt7615_ops =
 	.set_rekey_data = mt7615_set_rekey_data,
 #endif /* CONFIG_PM */
 	.set_sar_specs = mt7615_set_sar_specs,
+	.get_adaptive_sens = mt7615_get_scs,
+	.set_adaptive_sens = mt7615_set_scs,
 };
 EXPORT_SYMBOL_GPL(mt7615_ops);
 
--- a/mt7615/init.c
+++ b/mt7615/init.c
@@ -403,6 +403,7 @@ mt7615_init_wiphy(struct ieee80211_hw *h
 	ieee80211_hw_set(hw, WANT_MONITOR_VIF);
 	ieee80211_hw_set(hw, SUPPORTS_RX_DECAP_OFFLOAD);
 	ieee80211_hw_set(hw, SUPPORTS_VHT_EXT_NSS_BW);
+	ieee80211_hw_set(hw, ADAPTIVE_SENSITIVITY_CTRL);
 
 	if (is_mt7615(&phy->dev->mt76))
 		hw->max_tx_fragments = MT_TXP_MAX_BUF_NUM;
